{"version":3,"sources":["ng-paste-from.coffee"],"names":[],"mappings":"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","file":"ng-paste-from-latest.js","sourceRoot":"/source/","sourcesContent":["angular.module \"ngPasteFrom\", []\n\t.constant \"ngPasteFromErrors\",\n\t\tinvalidColumnLength: \"NGPASTEFROM_INVALID_COLUMN_LENGTH\"\n\t\tfailedValidation: \"NGPASTEFROM_FAILED_VALIDATION\"\n\n\t.directive \"ngPasteFrom\", ->\n\t\trestrict: \"A\"\n\t\tscope: \n\t\t\tngPasteFrom: \"=\"\n\t\t\tngPasteFromFormat: \"=\"\n\t\t\tngPasteFromOnPaste: \"=\"\n\t\t\tngPasteFromOnValidate: \"=\"\n\t\t\tngPasteFromOnError: \"=\"\n\t\t\n\t\tlink: ($scope, element, attrs) ->\n\t\t\tif not $scope.ngPasteFromFormat?\n\t\t\t\tconsole.error \"Missing required attribute ngPasteFromFormat.\"\n\n\t\t\t# NOTE: This solution with paste + keyup kind of works, but it is not optimal.\n\t\t\t# It causes the data to show and not get processed until key up.\n\t\t\telement.on \"paste\", ->\n\t\t\t\telement.val \"\"\n\t\t\t\t$scope.hasPasted = true\n\t\t\t\n\t\t\telement.on \"keyup\", ->\n\t\t\t\tif $scope.hasPasted\n\t\t\t\t\t$scope.$apply ->\n\t\t\t\t\t\t$scope.pasteData = $scope.ngPasteFromOnPaste element.val()\n\t\t\t\t\t$scope.hasPasted = false\n\t\t\t\telement.val \"\"\n\n\t\tcontroller: ($scope, $filter, ngPasteFromErrors) ->\n\t\t\tdefaultOnPaste = (data) -> data\n\n\t\t\tdefaultOnError = (error, index) ->\n\t\t\t\tconsole.error \"ngPasteFromError: index \" + index + \" error: \" + error\n\n\t\t\tdefaultOnValidate = -> true\n\n\t\t\t# Assign default callbacks\n\t\t\tif not $scope.ngPasteFromOnPaste? then $scope.ngPasteFromOnPaste = defaultOnPaste\n\t\t\tif not $scope.ngPasteFromOnError? then $scope.ngPasteFromOnError = defaultOnError\n\t\t\tif not $scope.ngPasteFromOnValidate? then $scope.ngPasteFromOnValidate = defaultOnValidate\n\n\t\t\tsplitToRows = (data) ->\n\t\t\t\tlineEndingsRegExp = /\\r\\n|\\n\\r|\\n|\\r/g;\n\t\t\t\tlineEnding = \"\\n\"\n\t\t\t\tdata.replace(lineEndingsRegExp, lineEnding).split(lineEnding)\n\n\t\t\tsplitToColumns = (row) ->\n\t\t\t\tseparatorChar = \"\\t\"\n\t\t\t\trow.split separatorChar\n\n\t\t\tcolumnsToObject = (columns) ->\n\t\t\t\tobj = {}\n\t\t\t\tformat = $scope.ngPasteFromFormat\n\t\t\t\tfor column, index in columns\n\t\t\t\t\tobj[format[index]] = column\n\t\t\t\tobj\n\n\t\t\t$scope.processPasteData = (data) ->\n\t\t\t\trows = splitToRows data\n\t\t\t\tresult = []\n\n\t\t\t\tfor row, index in rows\n\t\t\t\t\tcolumns = splitToColumns row\n\n\t\t\t\t\tif columns.length isnt $scope.ngPasteFromFormat.length\n\t\t\t\t\t\t$scope.ngPasteFromOnError ngPasteFromErrors.invalidColumnLength, index\n\t\t\t\t\t\tcontinue\n\n\t\t\t\t\tobj = columnsToObject columns\n\n\t\t\t\t\tif $scope.ngPasteFromOnValidate obj, index\n\t\t\t\t\t\tresult.push obj\n\t\t\t\t\telse\n\t\t\t\t\t\t$scope.ngPasteFromOnError ngPasteFromErrors.failedValidation, index\n\n\t\t\t\t$scope.ngPasteFrom = result\n\n\t\t\t$scope.$watch \"pasteData\", ->\n\t\t\t\tif $scope.pasteData? and 0 < $scope.pasteData.length\n\t\t\t\t\t$scope.processPasteData($scope.pasteData)\n\t\t\t\t\t$scope.pasteData = null\n"]}