{"version":3,"sources":["ng-paste-from.coffee"],"names":[],"mappings":"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","file":"ng-paste-from-latest.js","sourceRoot":"/source/","sourcesContent":["angular.module \"ngPasteFrom\", []\n\t.constant \"ngPasteFromErrors\",\n\t\tinvalidColumnLength: \"NGPASTEFROM_INVALID_COLUMN_LENGTH\"\n\t\tfailedValidation: \"NGPASTEFROM_FAILED_VALIDATION\"\n\n\t.directive \"ngPasteFrom\", ->\n\t\trestrict: \"A\"\n\t\tscope: \n\t\t\tngPasteFrom: \"=\"\n\t\t\tngPasteFromFormat: \"=\"\n\t\t\tngPasteFromOnPaste: \"=\"\n\t\t\tngPasteFromOnValidate: \"=\"\n\t\t\tngPasteFromOnError: \"=\"\n\n\t\tlink: ($scope, element, attrs) ->\n\t\t\tif not $scope.ngPasteFromFormat?\n\t\t\t\tconsole.error \"Missing required attribute ngPasteFromFormat.\"\n\n\t\t\telement.on \"paste\", $scope.pasteEvent\n\t\t\telement.on \"keyup\", $scope.clearSourceElementEvent\n\t\t\telement.on \"change\", $scope.clearSourceElementEvent\n\n\t\tcontroller: ($scope, $filter, ngPasteFromErrors, $timeout) ->\n\t\t\tsplitToRows = (data) ->\n\t\t\t\tlineEndingsRegExp = /\\r\\n|\\n\\r|\\n|\\r/g;\n\t\t\t\tlineEnding = \"\\n\"\n\t\t\t\tdata.replace(lineEndingsRegExp, lineEnding).split(lineEnding)\n\n\t\t\tsplitToColumns = (row) ->\n\t\t\t\tseparatorChar = \"\\t\"\n\t\t\t\trow.split separatorChar\n\n\t\t\tcolumnsToObject = (columns) ->\n\t\t\t\tobj = {}\n\t\t\t\tformat = $scope.ngPasteFromFormat\n\t\t\t\tfor column, index in columns\n\t\t\t\t\tobj[format[index]] = column\n\t\t\t\tobj\n\n\t\t\tprocessPasteData = (data) ->\n\t\t\t\tif not (data and data.length)\n\t\t\t\t\treturn\n\n\t\t\t\trows = splitToRows data\n\t\t\t\tresult = []\n\n\t\t\t\tfor row, index in rows\n\t\t\t\t\tcolumns = splitToColumns row\n\n\t\t\t\t\tif columns.length isnt $scope.ngPasteFromFormat.length\n\t\t\t\t\t\tif typeof $scope.ngPasteFromOnError is \"function\"\n\t\t\t\t\t\t\t$scope.ngPasteFromOnError ngPasteFromErrors.invalidColumnLength, index\n\t\t\t\t\t\tcontinue\n\n\t\t\t\t\tobj = columnsToObject columns\n\n\t\t\t\t\tif typeof $scope.ngPasteFromOnValidate isnt \"function\" or $scope.ngPasteFromOnValidate obj, index\n\t\t\t\t\t\tresult.push obj\n\t\t\t\t\telse if typeof $scope.ngPasteFromOnError is \"function\"\n\t\t\t\t\t\t$scope.ngPasteFromOnError ngPasteFromErrors.failedValidation, index\n\n\t\t\t\t$scope.ngPasteFrom = result\n\n\t\t\t$scope.pasteEvent = (event) ->\n\t\t\t\telement = angular.element event.srcElement\n\t\t\t\telement.val \"\"\n\t\t\t\t$timeout ->\n\t\t\t\t\tdata = element.val()\n\t\t\t\t\telement.val \"\"\n\t\t\t\t\tif typeof $scope.ngPasteFromOnPaste is \"function\"\n\t\t\t\t\t\tdata = $scope.ngPasteFromOnPaste data\n\t\t\t\t\tprocessPasteData data\n\n\t\t\t$scope.clearSourceElementEvent = (event) ->\n\t\t\t\telement = angular.element event.srcElement\n\t\t\t\telement.val \"\"\n"]}