{"version":3,"sources":["ng-paste-from.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA,WAAA;;AAAA,EAAA,WAAA,GAAc,OAAO,CAAC,MAAR,CAAe,aAAf,EAA8B,EAA9B,CAAd,CAAA;;AAAA,EAEA,WACC,CAAC,QADF,CACW,mBADX,EAEE;AAAA,IAAA,mBAAA,EAAqB,mCAArB;AAAA,IACA,gBAAA,EAAkB,+BADlB;GAFF,CAIC,CAAC,SAJF,CAIY,aAJZ,EAI2B,SAAA,GAAA;WACzB;AAAA,MAAA,QAAA,EAAU,GAAV;AAAA,MACA,KAAA,EACC;AAAA,QAAA,WAAA,EAAa,GAAb;AAAA,QACA,iBAAA,EAAmB,GADnB;AAAA,QAEA,qBAAA,EAAuB,GAFvB;AAAA,QAGA,kBAAA,EAAoB,GAHpB;OAFD;AAAA,MAOA,IAAA,EAAM,SAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,GAAA;AACL,QAAA,IAAO,gCAAP;AACC,UAAA,OAAO,CAAC,KAAR,CAAc,+CAAd,CAAA,CADD;SAAA;AAAA,QAKA,OAAO,CAAC,EAAR,CAAW,OAAX,EAAoB,SAAC,KAAD,GAAA;AACnB,UAAA,OAAO,CAAC,GAAR,CAAY,EAAZ,CAAA,CAAA;iBACA,MAAM,CAAC,SAAP,GAAmB,KAFA;QAAA,CAApB,CALA,CAAA;eASA,OAAO,CAAC,EAAR,CAAW,OAAX,EAAoB,SAAC,KAAD,GAAA;AACnB,UAAA,IAAG,MAAM,CAAC,SAAV;AACC,YAAA,MAAM,CAAC,MAAP,CAAc,SAAA,GAAA;qBACb,MAAM,CAAC,SAAP,GAAmB,OAAO,CAAC,GAAR,CAAA,EADN;YAAA,CAAd,CAAA,CAAA;AAAA,YAGA,MAAM,CAAC,SAAP,GAAmB,KAHnB,CADD;WAAA;iBAMA,OAAO,CAAC,GAAR,CAAY,EAAZ,EAPmB;QAAA,CAApB,EAVK;MAAA,CAPN;AAAA,MA0BA,UAAA,EAAY,SAAC,MAAD,EAAS,OAAT,EAAkB,iBAAlB,GAAA;AACX,YAAA,+EAAA;AAAA,QAAA,cAAA,GAAiB,SAAC,KAAD,EAAQ,KAAR,GAAA;iBAChB,OAAO,CAAC,KAAR,CAAc,0BAAA,GAA6B,KAA7B,GAAqC,UAArC,GAAkD,KAAhE,EADgB;QAAA,CAAjB,CAAA;AAAA,QAGA,iBAAA,GAAoB,SAAC,MAAD,EAAS,KAAT,GAAA;AACnB,iBAAO,IAAP,CADmB;QAAA,CAHpB,CAAA;AAOA,QAAA,IAAO,iCAAP;AAAuC,UAAA,MAAM,CAAC,kBAAP,GAA4B,cAA5B,CAAvC;SAPA;AAQA,QAAA,IAAO,oCAAP;AAA0C,UAAA,MAAM,CAAC,qBAAP,GAA+B,iBAA/B,CAA1C;SARA;AAAA,QAUA,WAAA,GAAc,SAAC,IAAD,GAAA;AACb,cAAA,6BAAA;AAAA,UAAA,iBAAA,GAAoB,kBAApB,CAAA;AAAA,UACA,UAAA,GAAa,IADb,CAAA;AAGA,iBAAO,IAAI,CAAC,OAAL,CAAa,iBAAb,EAAgC,UAAhC,CAA2C,CAAC,KAA5C,CAAkD,UAAlD,CAAP,CAJa;QAAA,CAVd,CAAA;AAAA,QAgBA,cAAA,GAAiB,SAAC,GAAD,GAAA;AAChB,cAAA,aAAA;AAAA,UAAA,aAAA,GAAgB,IAAhB,CAAA;AAEA,iBAAO,GAAG,CAAC,KAAJ,CAAU,aAAV,CAAP,CAHgB;QAAA,CAhBjB,CAAA;AAAA,QAqBA,eAAA,GAAkB,SAAC,OAAD,GAAA;AACjB,cAAA,yBAAA;AAAA,UAAA,CAAA,GAAI,EAAJ,CAAA;AAAA,UACA,MAAA,GAAS,MAAM,CAAC,iBADhB,CAAA;AAGA,eAAA,sDAAA;2BAAA;AACC,YAAA,CAAE,CAAA,MAAO,CAAA,CAAA,CAAP,CAAF,GAAe,CAAf,CADD;AAAA,WAHA;AAMA,iBAAO,CAAP,CAPiB;QAAA,CArBlB,CAAA;AAAA,QA8BA,MAAM,CAAC,gBAAP,GAA0B,SAAC,IAAD,GAAA;AACzB,cAAA,wCAAA;AAAA,UAAA,IAAA,GAAO,WAAA,CAAY,IAAZ,CAAP,CAAA;AAAA,UACA,MAAA,GAAS,EADT,CAAA;AAGA,eAAA,mDAAA;wBAAA;AACC,YAAA,OAAA,GAAU,cAAA,CAAe,CAAf,CAAV,CAAA;AAEA,YAAA,IAAG,OAAO,CAAC,MAAR,KAAoB,MAAM,CAAC,iBAAiB,CAAC,MAAhD;AACC,cAAA,MAAM,CAAC,kBAAP,CAA0B,iBAAiB,CAAC,mBAA5C,EAAiE,CAAjE,CAAA,CAAA;AACA,uBAFD;aAFA;AAAA,YAMA,CAAA,GAAI,eAAA,CAAgB,OAAhB,CANJ,CAAA;AAQA,YAAA,IAAG,MAAM,CAAC,qBAAP,CAA6B,CAA7B,EAAgC,CAAhC,CAAH;AACC,cAAA,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAA,CADD;aAAA,MAAA;AAGC,cAAA,MAAM,CAAC,kBAAP,CAA0B,iBAAiB,CAAC,gBAA5C,EAA8D,CAA9D,CAAA,CAHD;aATD;AAAA,WAHA;iBAiBA,MAAM,CAAC,WAAP,GAAqB,OAlBI;QAAA,CA9B1B,CAAA;eAkDA,MAAM,CAAC,MAAP,CAAc,WAAd,EAA2B,SAAA,GAAA;AAC1B,UAAA,IAAG,0BAAA,IAAsB,CAAA,GAAI,MAAM,CAAC,SAAS,CAAC,MAA9C;AACC,YAAA,MAAM,CAAC,gBAAP,CAAwB,MAAM,CAAC,SAA/B,CAAA,CAAA;mBACA,MAAM,CAAC,SAAP,GAAmB,KAFpB;WAD0B;QAAA,CAA3B,EAnDW;MAAA,CA1BZ;MADyB;EAAA,CAJ3B,CAFA,CAAA;AAAA","file":"ng-paste-from-latest.js","sourceRoot":"/source/","sourcesContent":["ngPasteFrom = angular.module \"ngPasteFrom\", []\n\nngPasteFrom\n\t.constant \"ngPasteFromErrors\", \n\t\tinvalidColumnLength: \"NGPASTEFROM_INVALID_COLUMN_LENGTH\"\n\t\tfailedValidation: \"NGPASTEFROM_FAILED_VALIDATION\"\n\t.directive \"ngPasteFrom\", ->\n\t\trestrict: \"A\"\n\t\tscope: \n\t\t\tngPasteFrom: \"=\"\n\t\t\tngPasteFromFormat: \"=\"\n\t\t\tngPasteFromOnValidate: \"=\"\n\t\t\tngPasteFromOnError: \"=\"\n\t\t\n\t\tlink: ($scope, element, attrs) ->\n\t\t\tif not $scope.ngPasteFromFormat?\n\t\t\t\tconsole.error \"Missing required attribute ngPasteFromFormat.\"\n\n\t\t\t# NOTE: This solution with paste + keyup kind of works, but it is not optimal.\n\t\t\t# It causes the data to show and not get processed until key up.\n\t\t\telement.on \"paste\", (event) ->\n\t\t\t\telement.val(\"\")\n\t\t\t\t$scope.hasPasted = true\n\t\t\t\n\t\t\telement.on \"keyup\", (event) ->\n\t\t\t\tif $scope.hasPasted\n\t\t\t\t\t$scope.$apply ->\n\t\t\t\t\t\t$scope.pasteData = element.val()\n\t\t\t\t\t\n\t\t\t\t\t$scope.hasPasted = false\n\n\t\t\t\telement.val(\"\")\n\t\t\t\n\t\tcontroller: ($scope, $filter, ngPasteFromErrors) ->\n\t\t\tdefaultOnError = (error, index) ->\n\t\t\t\tconsole.error \"ngPasteFromError: index \" + index + \" error: \" + error\n\n\t\t\tdefaultOnValidate = (object, index) ->\n\t\t\t\treturn true\n\n\t\t\t# Assign default error and validation handler in case they are not set.\n\t\t\tif not $scope.ngPasteFromOnError? then $scope.ngPasteFromOnError = defaultOnError\n\t\t\tif not $scope.ngPasteFromOnValidate? then $scope.ngPasteFromOnValidate = defaultOnValidate\n\n\t\t\tsplitToRows = (data) ->\n\t\t\t\tlineEndingsRegExp = /\\r\\n|\\n\\r|\\n|\\r/g;\n\t\t\t\tlineEnding = \"\\n\"\n\n\t\t\t\treturn data.replace(lineEndingsRegExp, lineEnding).split(lineEnding)\n\n\t\t\tsplitToColumns = (row) ->\n\t\t\t\tseparatorChar = \"\\t\"\n\n\t\t\t\treturn row.split(separatorChar)\n\n\t\t\tcolumnsToObject = (columns) ->\n\t\t\t\to = {}\n\t\t\t\tformat = $scope.ngPasteFromFormat\n\n\t\t\t\tfor c, i in columns\n\t\t\t\t\to[format[i]] = c\n\n\t\t\t\treturn o\n\n\t\t\t$scope.processPasteData = (data) ->\n\t\t\t\trows = splitToRows data\n\t\t\t\tresult = []\n\n\t\t\t\tfor r, i in rows\n\t\t\t\t\tcolumns = splitToColumns r\n\n\t\t\t\t\tif columns.length isnt $scope.ngPasteFromFormat.length\n\t\t\t\t\t\t$scope.ngPasteFromOnError ngPasteFromErrors.invalidColumnLength, i\n\t\t\t\t\t\tcontinue\n\n\t\t\t\t\to = columnsToObject columns\n\n\t\t\t\t\tif $scope.ngPasteFromOnValidate o, i\n\t\t\t\t\t\tresult.push o\n\t\t\t\t\telse\n\t\t\t\t\t\t$scope.ngPasteFromOnError ngPasteFromErrors.failedValidation, i\n\n\t\t\t\t$scope.ngPasteFrom = result\n\n\t\t\t$scope.$watch \"pasteData\", ->\n\t\t\t\tif $scope.pasteData? and 0 < $scope.pasteData.length\n\t\t\t\t\t$scope.processPasteData($scope.pasteData)\n\t\t\t\t\t$scope.pasteData = null"]}