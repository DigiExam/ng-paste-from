{"version":3,"file":"ng-paste-from-latest.min.js","sources":["ng-paste-from.coffee"],"names":[],"mappings":"CAAA,WAAA,QAAQ,OAAO,kBACb,SAAS,qBACT,oBAAqB,oCACrB,iBAAkB,kCAElB,UAAU,cAAe,kBACzB,SAAU,IACV,OACC,YAAa,IACb,kBAAmB,IACnB,mBAAoB,IACpB,sBAAuB,IACvB,mBAAoB,KAErB,KAAM,SAAC,OAAQ,eACP,OAAA,OAAA,mBACN,QAAQ,MAAM,iDAIf,QAAQ,GAAG,QAAS,iBACnB,SAAQ,IAAI,IACZ,OAAO,WAAY,IAEpB,QAAQ,GAAG,QAAS,WACnB,GAAA,iBAAG,QAAO,YACT,UAAY,QAAQ,MACmB,kBAApC,QAAc,qBAChB,UAAY,OAAO,mBAAmB,YACvC,OAAO,OAAO,iBACb,QAAO,UAAY,YACpB,OAAO,WAAY,GACpB,QAAQ,IAAI,OAEd,WAAY,SAAC,OAAQ,QAAS,mBAC7B,GAAA,iBAAA,eAAA,kBAAA,aAAc,SAAC,MACd,GAAA,YAAA,wBAAA,mBAAoB,mBACpB,WAAa,KACb,KAAK,QAAQ,kBAAmB,YAAY,MAAM,aAEnD,eAAiB,SAAC,KACjB,GAAA,qBAAA,eAAgB,IAChB,IAAI,MAAM,gBAEX,gBAAkB,SAAC,SAClB,GAAA,QAAA,OAAA,MAAA,IAAA,GAAA,IAEA,KAFA,OACA,OAAS,OAAO,kBAChB,MAAA,GAAA,EAAA,KAAA,QAAA,OAAA,KAAA,GAAA,QAAA,yBACC,IAAI,OAAO,QAAU,aACtB,MAED,OAAO,iBAAmB,SAAC,MAC1B,GAAA,SAAA,MAAA,IAAA,OAAA,IAAA,KAAA,GAAA,IAGA,KAHA,KAAO,YAAY,MACnB,UAEA,MAAA,GAAA,EAAA,KAAA,KAAA,OAAA,KAAA,GAAA,QAAA,mBACC,QAAU,eAAe,KAEtB,QAAQ,SAAY,OAAO,kBAAkB,QAKhD,IAAM,gBAAgB,SAEsB,kBAAzC,QAAc,uBAAyC,OAAO,sBAAsB,IAAK,OAC3F,OAAO,KAAK,KAC+B,kBAApC,QAAc,oBACrB,OAAO,mBAAmB,kBAAkB,iBAAkB,QATvB,kBAApC,QAAc,oBAChB,OAAO,mBAAmB,kBAAkB,oBAAqB,aAUpE,QAAO,YAAc,QAEtB,OAAO,OAAO,YAAa,WAC1B,MAAG,OAAA,OAAA,WAAsB,EAAI,OAAO,UAAU,QAC7C,OAAO,iBAAiB,OAAO,WAC/B,OAAO,UAAY,MAFpB","sourcesContent":["angular.module \"ngPasteFrom\", []\n\t.constant \"ngPasteFromErrors\",\n\t\tinvalidColumnLength: \"NGPASTEFROM_INVALID_COLUMN_LENGTH\"\n\t\tfailedValidation: \"NGPASTEFROM_FAILED_VALIDATION\"\n\n\t.directive \"ngPasteFrom\", ->\n\t\trestrict: \"A\"\n\t\tscope: \n\t\t\tngPasteFrom: \"=\"\n\t\t\tngPasteFromFormat: \"=\"\n\t\t\tngPasteFromOnPaste: \"=\"\n\t\t\tngPasteFromOnValidate: \"=\"\n\t\t\tngPasteFromOnError: \"=\"\n\n\t\tlink: ($scope, element, attrs) ->\n\t\t\tif not $scope.ngPasteFromFormat?\n\t\t\t\tconsole.error \"Missing required attribute ngPasteFromFormat.\"\n\n\t\t\t# NOTE: This solution with paste + keyup kind of works, but it is not optimal.\n\t\t\t# It causes the data to show and not get processed until key up.\n\t\t\telement.on \"paste\", ->\n\t\t\t\telement.val \"\"\n\t\t\t\t$scope.hasPasted = true\n\n\t\t\telement.on \"keyup\", ->\n\t\t\t\tif $scope.hasPasted\n\t\t\t\t\tpasteData = element.val()\n\t\t\t\t\tif typeof $scope.ngPasteFromOnPaste is \"function\"\n\t\t\t\t\t\tpasteData = $scope.ngPasteFromOnPaste pasteData\n\t\t\t\t\t$scope.$apply ->\n\t\t\t\t\t\t$scope.pasteData = pasteData\n\t\t\t\t\t$scope.hasPasted = false\n\t\t\t\telement.val \"\"\n\n\t\tcontroller: ($scope, $filter, ngPasteFromErrors) ->\n\t\t\tsplitToRows = (data) ->\n\t\t\t\tlineEndingsRegExp = /\\r\\n|\\n\\r|\\n|\\r/g;\n\t\t\t\tlineEnding = \"\\n\"\n\t\t\t\tdata.replace(lineEndingsRegExp, lineEnding).split(lineEnding)\n\n\t\t\tsplitToColumns = (row) ->\n\t\t\t\tseparatorChar = \"\\t\"\n\t\t\t\trow.split separatorChar\n\n\t\t\tcolumnsToObject = (columns) ->\n\t\t\t\tobj = {}\n\t\t\t\tformat = $scope.ngPasteFromFormat\n\t\t\t\tfor column, index in columns\n\t\t\t\t\tobj[format[index]] = column\n\t\t\t\tobj\n\n\t\t\t$scope.processPasteData = (data) ->\n\t\t\t\trows = splitToRows data\n\t\t\t\tresult = []\n\n\t\t\t\tfor row, index in rows\n\t\t\t\t\tcolumns = splitToColumns row\n\n\t\t\t\t\tif columns.length isnt $scope.ngPasteFromFormat.length\n\t\t\t\t\t\tif typeof $scope.ngPasteFromOnError is \"function\"\n\t\t\t\t\t\t\t$scope.ngPasteFromOnError ngPasteFromErrors.invalidColumnLength, index\n\t\t\t\t\t\tcontinue\n\n\t\t\t\t\tobj = columnsToObject columns\n\n\t\t\t\t\tif typeof $scope.ngPasteFromOnValidate isnt \"function\" or $scope.ngPasteFromOnValidate obj, index\n\t\t\t\t\t\tresult.push obj\n\t\t\t\t\telse if typeof $scope.ngPasteFromOnError is \"function\"\n\t\t\t\t\t\t$scope.ngPasteFromOnError ngPasteFromErrors.failedValidation, index\n\n\t\t\t\t$scope.ngPasteFrom = result\n\n\t\t\t$scope.$watch \"pasteData\", ->\n\t\t\t\tif $scope.pasteData? and 0 < $scope.pasteData.length\n\t\t\t\t\t$scope.processPasteData($scope.pasteData)\n\t\t\t\t\t$scope.pasteData = null\n"],"sourceRoot":"/source/"}