{"version":3,"sources":["ng-paste-from.coffee","ng-paste-from.js"],"names":["angular","module","constant","invalidColumnLength","failedValidation","row","column","directive","restrict","scope","ngPasteFrom","ngPasteFromColumns","ngPasteFromRowSeparator","ngPasteFromColumnSeparator","ngPasteFromPasteOnly","ngPasteFromBeforeParse","ngPasteFromOnValidate","ngPasteFromOnError","link","$scope","element","console","error","pasteEvent","event","clipboardData","data","_ref","window","originalEvent","getData","processPasteData","preventDefault","changeEvent","val","on","controller","$filter","ngPasteFromErrors","ngPasteFromSeparators","columnsToObject","columns","format","index","obj","_i","_len","length","getExpectedColumnsLength","expectedColumnsLength","result","rowData","rowResult","rows","_ref1","split","source","expectedLength","actualLength","push","$apply","call","this"],"mappings":"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","file":"ng-paste-from-latest.min.js","sourcesContent":["angular.module \"ngPasteFrom\", []\n\t.constant \"ngPasteFromErrors\",\n\t\tinvalidColumnLength: \"NGPASTEFROM_INVALID_COLUMN_LENGTH\"\n\t\tfailedValidation: \"NGPASTEFROM_FAILED_VALIDATION\"\n\n\t.constant \"ngPasteFromSeparators\",\n\t\trow: /\\r\\n|\\n\\r|\\n|\\r/g\n\t\tcolumn: \"\\t\"\n\n\t.directive \"ngPasteFrom\", ->\n\t\trestrict: \"A\"\n\t\tscope: \n\t\t\tngPasteFrom: \"=\"\n\t\t\tngPasteFromColumns: \"=\"\n\t\t\tngPasteFromRowSeparator: \"=\"\n\t\t\tngPasteFromColumnSeparator: \"=\"\n\t\t\tngPasteFromPasteOnly: \"=\"\n\t\t\tngPasteFromBeforeParse: \"=\"\n\t\t\tngPasteFromOnValidate: \"=\"\n\t\t\tngPasteFromOnError: \"=\"\n\n\t\tlink: ($scope, element, attrs) ->\n\t\t\tif not $scope.ngPasteFromColumns?\n\t\t\t\tconsole.error \"Missing required attribute ngPasteFromColumns.\"\n\n\t\t\t$scope.pasteEvent = (event) ->\n\t\t\t\tclipboardData = window.clipboardData || event.clipboardData || event.originalEvent && event.originalEvent.clipboardData\n\t\t\t\tdata = clipboardData.getData \"text/plain\"\n\t\t\t\tif typeof $scope.ngPasteFromBeforeParse is \"function\"\n\t\t\t\t\tdata = $scope.ngPasteFromBeforeParse data\n\t\t\t\t$scope.processPasteData data\n\t\t\t\tif $scope.ngPasteFromPasteOnly ? true\n\t\t\t\t\tevent.preventDefault()\n\n\t\t\t$scope.changeEvent = ->\n\t\t\t\tif $scope.ngPasteFromPasteOnly ? true\n\t\t\t\t\telement.val \"\"\n\t\t\t\telse\n\t\t\t\t\tdata = element.val()\n\t\t\t\t\tif typeof $scope.ngPasteFromBeforeParse is \"function\"\n\t\t\t\t\t\tdata = $scope.ngPasteFromBeforeParse data\n\t\t\t\t\t$scope.processPasteData data\n\n\t\t\telement.on \"paste\", $scope.pasteEvent\n\t\t\telement.on \"keyup\", $scope.changeEvent\n\t\t\telement.on \"change\", $scope.changeEvent\n\n\t\tcontroller: ($scope, $filter, ngPasteFromErrors, ngPasteFromSeparators) ->\n\t\t\t$scope.columnsToObject = (columns) ->\n\t\t\t\tobj = {}\n\t\t\t\tformat = $scope.ngPasteFromColumns\n\t\t\t\tfor column, index in columns\n\t\t\t\t\tobj[format[index]] = column\n\t\t\t\tobj\n\n\t\t\t$scope.getExpectedColumnsLength = ->\n\t\t\t\tif typeof $scope.ngPasteFromColumns is \"number\"\n\t\t\t\t\t$scope.ngPasteFromColumns\n\t\t\t\telse\n\t\t\t\t\t$scope.ngPasteFromColumns.length\n\n\t\t\t$scope.processPasteData = (data) ->\n\t\t\t\tif not (data and data.length)\n\t\t\t\t\treturn\n\n\t\t\t\trows = data.split $scope.ngPasteFromRowSeparator ? ngPasteFromSeparators.row\n\t\t\t\tresult = []\n\t\t\t\texpectedColumnsLength = $scope.getExpectedColumnsLength()\n\n\t\t\t\tfor row, index in rows\n\t\t\t\t\tif row is \"\"\n\t\t\t\t\t\tcontinue\n\n\t\t\t\t\tcolumns = row.split $scope.ngPasteFromColumnSeparator ? ngPasteFromSeparators.column\n\n\t\t\t\t\trowData =\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t\tsource: row\n\t\t\t\t\t\texpectedLength: expectedColumnsLength\n\t\t\t\t\t\tactualLength: columns.length\n\n\t\t\t\t\tif columns.length isnt expectedColumnsLength\n\t\t\t\t\t\tif typeof $scope.ngPasteFromOnError is \"function\"\n\t\t\t\t\t\t\t$scope.ngPasteFromOnError ngPasteFromErrors.invalidColumnLength, rowData\n\t\t\t\t\t\tcontinue\n\n\t\t\t\t\tif typeof $scope.ngPasteFromColumns is \"number\"\n\t\t\t\t\t\trowResult = columns\n\t\t\t\t\telse\n\t\t\t\t\t\trowResult = $scope.columnsToObject columns\n\n\t\t\t\t\tif typeof $scope.ngPasteFromOnValidate isnt \"function\" or $scope.ngPasteFromOnValidate rowResult, rowData\n\t\t\t\t\t\tresult.push rowResult\n\t\t\t\t\telse if typeof $scope.ngPasteFromOnError is \"function\"\n\t\t\t\t\t\t$scope.ngPasteFromOnError ngPasteFromErrors.failedValidation, rowData\n\n\t\t\t\t$scope.$apply ->\n\t\t\t\t\t$scope.ngPasteFrom = result\n",null],"sourceRoot":"/source/"}