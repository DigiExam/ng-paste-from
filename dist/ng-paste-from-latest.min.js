(function(){angular.module("ngPasteFrom",[]).constant("ngPasteFromErrors",{invalidColumnLength:"NGPASTEFROM_INVALID_COLUMN_LENGTH",failedValidation:"NGPASTEFROM_FAILED_VALIDATION"}).constant("ngPasteFromSeparators",{row:/\r\n|\n\r|\n|\r/g,column:"	"}).directive("ngPasteFrom",function(){return{restrict:"A",scope:{ngPasteFrom:"=",ngPasteFromColumns:"=",ngPasteFromRowSeparator:"=",ngPasteFromColumnSeparator:"=",ngPasteFromPasteOnly:"=",ngPasteFromBeforeParse:"=",ngPasteFromOnValidate:"=",ngPasteFromOnError:"="},link:function($scope,element){return null==$scope.ngPasteFromColumns&&console.error("Missing required attribute ngPasteFromColumns."),$scope.pasteEvent=function(event){var data,_ref;return null!=event.clipboardData&&null!=event.clipboardData.getData?data=event.clipboardData.getData("text/plain"):null!=event.originalEvent&&null!=event.originalEvent.clipboardData&&null!=event.originalEvent.clipboardData.getData?data=event.originalEvent.clipboardData.getData("text/plain"):null!=window.clipboardData&&null!=window.clipboardData.getData&&(data=window.clipboardData.getData("Text")),"function"==typeof $scope.ngPasteFromBeforeParse&&(data=$scope.ngPasteFromBeforeParse(data)),$scope.processPasteData(data),(null!=(_ref=$scope.ngPasteFromPasteOnly)?_ref:!0)?event.preventDefault():void 0},$scope.changeEvent=function(){var data,_ref;return(null!=(_ref=$scope.ngPasteFromPasteOnly)?_ref:!0)?element.val(""):(data=element.val(),"function"==typeof $scope.ngPasteFromBeforeParse&&(data=$scope.ngPasteFromBeforeParse(data)),$scope.processPasteData(data))},element.on("paste",$scope.pasteEvent),element.on("keyup",$scope.changeEvent),element.on("change",$scope.changeEvent)},controller:function($scope,$filter,ngPasteFromErrors,ngPasteFromSeparators){return $scope.columnsToObject=function(columns){var column,format,index,obj,_i,_len;for(obj={},format=$scope.ngPasteFromColumns,index=_i=0,_len=columns.length;_len>_i;index=++_i)column=columns[index],obj[format[index]]=column;return obj},$scope.getExpectedColumnsLength=function(){return"number"==typeof $scope.ngPasteFromColumns?$scope.ngPasteFromColumns:$scope.ngPasteFromColumns.length},$scope.processPasteData=function(data){var columns,expectedColumnsLength,index,result,row,rowData,rowResult,rows,_i,_len,_ref,_ref1;if(data&&data.length){for(rows=data.split(null!=(_ref=$scope.ngPasteFromRowSeparator)?_ref:ngPasteFromSeparators.row),result=[],expectedColumnsLength=$scope.getExpectedColumnsLength(),index=_i=0,_len=rows.length;_len>_i;index=++_i)row=rows[index],""!==row&&(columns=row.split(null!=(_ref1=$scope.ngPasteFromColumnSeparator)?_ref1:ngPasteFromSeparators.column),rowData={index:index,source:row,expectedLength:expectedColumnsLength,actualLength:columns.length},columns.length===expectedColumnsLength?(rowResult="number"==typeof $scope.ngPasteFromColumns?columns:$scope.columnsToObject(columns),"function"!=typeof $scope.ngPasteFromOnValidate||$scope.ngPasteFromOnValidate(rowResult,rowData)?result.push(rowResult):"function"==typeof $scope.ngPasteFromOnError&&$scope.ngPasteFromOnError(ngPasteFromErrors.failedValidation,rowData)):"function"==typeof $scope.ngPasteFromOnError&&$scope.ngPasteFromOnError(ngPasteFromErrors.invalidColumnLength,rowData));return $scope.$apply(function(){return $scope.ngPasteFrom=result})}}}}})}).call(this);
//# sourceMappingURL=ng-paste-from-latest.min.js.map